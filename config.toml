# Borg Agent Configuration Template
# This is an example configuration file.
# For local development, copy this file to config.production.toml and add your API keys.
# The config.production.toml file is ignored by Git to prevent accidentally committing your API keys.

# Default LLM configuration (used as fallback)
[llm.default]
provider = "openai"
api_key = "your-openai-api-key-here"
model = "gpt-4o"
max_tokens = 2048
temperature = 0.0

# Code Generation LLM (specialized for writing high-quality code)
[llm.code_generation]
provider = "anthropic"
api_key = "your-anthropic-api-key-here"
model = "claude-3-7-sonnet-20250219"  # High-capability model for code
max_tokens = 4096                     # Larger token limit for code generation
temperature = 0.0                     # Lower temperature for more deterministic output

# Ethical Assessment LLM (specialized for evaluating ethical implications)
[llm.ethics]
provider = "anthropic"
api_key = "your-anthropic-api-key-here"
model = "claude-3-7-opus-20240229"    # Most capable model for ethical reasoning
max_tokens = 1024
temperature = 0.0                     # Low temperature for consistent ethical judgments

# Planning LLM (for goal selection and high-level planning)
[llm.planning]
provider = "anthropic"
api_key = "your-anthropic-api-key-here"
model = "claude-3-7-sonnet-20250219"
max_tokens = 2048
temperature = 0.5                     # Medium temperature for creative but coherent planning

# Code Review LLM (for validating and reviewing code changes)
[llm.code_review]
provider = "anthropic"
api_key = "your-anthropic-api-key-here"
model = "claude-3-7-haiku-20250209"   # Faster model suitable for review tasks
max_tokens = 1536
temperature = 0.0                     # Lower temperature for consistent code reviews

[agent]
max_memory_usage_mb = 2048
max_cpu_usage_percent = 80
working_dir = "./workspace"
timeout_seconds = 120
testing_mode = false                  # When true, prevents recursive agent activation

[git]
repo_url = ""                         # Leave empty for local-only repository
username = ""                         # Optional: For remote repository auth
token = ""                            # Optional: For remote repository auth
branch_prefix = "borg/improvement/"

[testing]
linting_enabled = true                # Enable code linting
compilation_check = true              # Verify code compiles before merging
run_unit_tests = true                 # Run unit tests on changes
run_integration_tests = false         # Run integration tests (more time-consuming)
performance_benchmarks = false        # Run performance benchmarks
timeout_seconds = 300                 # Timeout for test execution

[llm_logging]
enabled = true
log_dir = "./logs/llm"
console_logging = true
include_full_prompts = true
include_full_responses = true
max_log_size_mb = 100
log_files_to_keep = 10

[mongodb]
enabled = false                       # Set to true to use MongoDB instead of file-based storage
connection_string = "mongodb://localhost:27017"  # Local MongoDB for development
database = "borg"                     # Database name

# üîê SECURITY CONFIGURATION
# This section configures the authentication system that fixes the critical security vulnerability
[authentication]
# IMPORTANT: Generate strong, unique API keys for production use
# Example generation: openssl rand -hex 32
api_keys = [
    "your-secure-api-key-here-replace-with-actual-key",
    # Add additional API keys as needed for different users/services
    # "another-api-key-for-service-account",
]

# Session configuration
session_timeout_seconds = 3600        # 1 hour session timeout
max_sessions_per_key = 5              # Maximum concurrent sessions per API key
session_cleanup_interval_seconds = 300 # Clean up expired sessions every 5 minutes

# Rate limiting (prevents abuse)
rate_limit_per_minute = 100           # Requests per minute per API key

# Security policies
require_authentication = true         # CRITICAL: Must be true for production
default_role = "Developer"            # Default role for authenticated users
                                     # Options: "User", "Developer", "Administrator", "Creator"

# Failed authentication protection
max_failed_attempts = 5               # Lock out after 5 failed attempts
lockout_duration_seconds = 900        # 15 minute lockout period

# Audit logging
log_auth_events = true                # Log all authentication events
auth_log_dir = "./logs/auth"         # Directory for authentication logs

# üö® SECURITY NOTES:
# 1. NEVER commit real API keys to version control
# 2. Use environment variables for production API keys:
#    api_keys = ["${BORG_API_KEY_1}", "${BORG_API_KEY_2}"]
# 3. Set require_authentication = true in production
# 4. Generate cryptographically secure API keys (min 32 characters)
# 5. Rotate API keys regularly
# 6. Monitor authentication logs for suspicious activity
# 7. Use HTTPS when deploying over network